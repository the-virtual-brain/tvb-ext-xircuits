name: Run Python tests

on:
  push:
    branches: '*'
  pull_request:
    branches: [ opened, synchronize, reopened ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10" ]

    steps:

    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set Branch Name
      run: |
          echo "branch_name=${GITHUB_HEAD_REF##*/}" >> $GITHUB_ENV               

    - name: Check Branch
      run: echo "$env.branch_name"

    - name: Get Hash
      id: hash
      run: echo "git_hash=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV

    - name: Check Hash
      run: echo "$env.git_hash"

    - name: Setup Build Env
      run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
          . ~/.nvm/nvm.sh
          nvm install 14.15.3
          nvm use 14.15.3
          npm install --global yarn
          npm install react-collapsed

    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip install allensdk
          pip install -r requirements.txt
          pip install -U pytest pytest-cov pytest-mock

    - name: Build Extension in Dev Mode
      run: |
          pip install -e .

    - name: Run tests
      run: |
        pytest tvbextxircuits -r ap

  sonar_cloud:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install allensdk
        pip install -r requirements.txt
        pip install -U pytest pytest-cov pytest-mock

    - name: Compute coverage
      run: |
          python -m pip install .[test]
          pytest -v --cov --cov-report=xml:coverage.xml tvbextxircuits

    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}